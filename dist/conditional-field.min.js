"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),ConditionalField=function(){function t(e){_classCallCheck(this,t),this.$controls=$(e.control),this.$controls.length<=0||(this.args=e,this.args.parent=this.args.parent||!1,this.setAllVisible(),this.onChangeBound=this.onChange.bind(this),this.$controls.on("change",this.onChangeBound))}return _createClass(t,[{key:"onChange",value:function(t){var e=$(t.target);this.setVisible(e)}},{key:"setVisible",value:function(t){var e=this.inputValue(t);console.log(t),console.log(e);for(var i in this.args.visibility){var n=this.args.parent?t.closest(this.args.parent).find(this.args.visibility[i]):$(this.args.visibility[i]);e.toString()===i.toString()?n.show():n.hide()}}},{key:"setAllVisible",value:function(){var t=this;this.$controls.each(function(e,i){t.setVisible($(i))})}},{key:"getInputType",value:function(t){return t.is("select")?"select":t.is(":radio")?"radio":t.is(":checkbox")?"checkbox":void 0}},{key:"inputValue",value:function(t){var e=this.getInputType(t),i="";switch(e){case"checkbox":i=t.is(":checked")?"on":"off";break;case"radio":i=this.$controls.filter(":checked").val();break;default:i=t.val()}return i}},{key:"destroy",value:function(){this.$controls.off("change",this.onChangeBound)}}]),t}();